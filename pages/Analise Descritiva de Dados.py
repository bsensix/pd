import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import streamlit as st

st.title("An√°lise Descritiva de Dados üìä")
st.markdown(
    "A an√°lise descritiva de dados √© uma etapa inicial de explora√ß√£o, resumo e compreens√£o de um conjunto de dados. Envolve o c√°lculo de estat√≠sticas resumidas e a cria√ß√£o de gr√°ficos para identificar tend√™ncias, padr√µes e valores at√≠picos."
)
st.markdown(
    "Nesse tipo de estudo a an√°lise dos dados se concentra na distribui√ß√£o, tend√™ncia central e dispers√£o dos dados, al√©m de explorar correla√ß√µes entre vari√°veis. Essa abordagem fornece insights iniciais, estabelecendo uma base para an√°lises estat√≠sticas mais avan√ßadas."
)
st.markdown(
    "Para ilustar a an√°lise descritiva, vamos usar as informa√ß√µes dos jogadores jogo **EA Sports FC** ‚öΩ"
)

# Ler o DataFrame de exemplo
df = pd.read_csv(
    r"Dados/all_players.csv",
    index_col=0,
)

# imagem EA Sports
# Estilo CSS para posicionar a imagem
image_style = (
    "position: absolute; "
    "top: 00; "
    "right: 0; "
    "width: 100px; "
    "height: 50px; "
    "margin-top: -340px; "
    "margin-right: -160px;"
)

# Criar o c√≥digo HTML para a imagem
image_url = "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/EA_Sports_FC_24_logo.svg/2560px-EA_Sports_FC_24_logo.svg.png"
image_html = f'<img src="{image_url}" style="{image_style}">'

# Usar st.markdown para exibir a imagem
st.markdown(image_html, unsafe_allow_html=True)

# Filtros
st.title("Filtros:")
col1, col2, col3 = st.columns(3)

list_countries = df["Nation"].unique()
filter_country = col1.multiselect("Selecione o Pa√≠s:", list_countries)

list_positions = df["Position"].unique()
filter_position = col2.multiselect("Selecione a posi√ß√£o do Jogador:", list_positions)

list_clubs = df["Club"].unique()
filter_club = col3.multiselect("Selecione o Clube:", list_clubs)

# Aplicar os filtros ao DataFrame
if not filter_country and not filter_position and not filter_club:
    filtered_df = df  # Se nenhum filtro estiver selecionado, mostrar todos os dados
else:
    filtered_df = df[
        (df["Nation"].isin(filter_country))
        | (df["Position"].isin(filter_position))
        | (df["Club"].isin(filter_club))
    ]

# Dados estat√≠sticos cl√°ssicos
df_info = filtered_df.describe()

st.subheader("Estat√≠stica B√°sica")
st.markdown(
    "Calcular medidas estat√≠sticas b√°sicas, como m√©dia, desvio padr√£o, m√≠nimo, m√°ximo e quartis (25¬∫, 50¬∫ e 75¬∫ percentis), √© essencial em an√°lises de dados. Elas resumem a distribui√ß√£o, destacam a tend√™ncia central, indicam a dispers√£o, revelam valores extremos e auxiliam na tomada de decis√µes"
)
st.markdown(
    "Podemos ter esses dados de forma r√°pida usando a fun√ß√£o describe() do Pandas"
)
st.dataframe(df_info)

# Distribui√ß√£o e Frequ√™ncia dos Dados

st.subheader("Histograma")
st.markdown(
    "Um histograma √© um tipo de gr√°fico usado na an√°lise estat√≠stica para representar a distribui√ß√£o de um conjunto de dados num√©ricos. Ele √© particularmente √∫til para entender como os valores est√£o agrupados em intervalos, mostrando a frequ√™ncia com que os valores caem em cada intervalo."
)
st.markdown(
    "No seguinte estudo de caso podemos annalisar qual a idade de jogadores e mais frequente, quais notas do jogadores s√£o mais comuns, entre outras an√°lises sobre os par√¢metros"
)

# Lista de nomes das colunas a serem exclu√≠das
colunas_para_excluir = [
    "Name",
    "Nation",
    "Club",
    "Position",
    "Att work rate",
    "Def work rate",
    "Preferred foot",
    "Weak foot",
    "Skill moves",
    "URL",
    "Gender",
    "GK",
]

# Use a fun√ß√£o drop com a lista de colunas para excluir
df_hist = df.drop(colunas_para_excluir, axis=1)

# Adicione um seletor para escolher a coluna
coluna_selecionada = st.selectbox("Selecione o par√¢metro:", df_hist.columns)

# Crie o histograma com base na coluna selecionada
plt.figure(figsize=(8, 6))
plt.hist(df[coluna_selecionada], bins=20, edgecolor="k")
plt.title(f"Histograma de {coluna_selecionada}")
plt.xlabel(coluna_selecionada)
plt.ylabel("Frequ√™ncia")
st.pyplot(plt)

# Correla√ß√£o de Dados

st.subheader("Correla√ß√£o de Dados")
st.markdown(
    "A correla√ß√£o de dados √© uma ferramenta valiosa para avaliar como duas vari√°veis est√£o relacionadas. Ela pode ajudar na identifica√ß√£o de padr√µes, na tomada de decis√µes e na formula√ß√£o de hip√≥teses em v√°rias disciplinas, fornecendo insights importantes sobre a intera√ß√£o entre vari√°veis e auxiliando na compreens√£o de fen√¥menos complexos."
)

# Select the relevant columns for correlation analysis
attributes = df[
    ["Pace", "Shooting", "Passing", "Dribbling", "Defending", "Acceleration", "Sprint"]
]

# Calculate the correlation matrix
correlation_matrix = attributes.corr()

# Plot a heatmap to visualize the correlation matrix
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", square=True)
plt.title("Correla√ß√£o entre os Atributos dos Jogadores")
plt.show()
st.pyplot(plt)

st.subheader("Gr√°fico de Box Plot")
st.markdown(
    'O box plot √© um gr√°fico que fornece uma vis√£o resumida da distribui√ß√£o estat√≠stica de um conjunto de dados. Ele destaca a mediana, quartis e a presen√ßa de outliers. A caixa central representa o intervalo interquartil (IQR), enquanto os "whiskers" se estendem at√© os limites dentro de 1,5 vezes o IQR. Outliers, pontos fora desse intervalo, podem indicar observa√ß√µes incomuns. √â uma ferramenta eficaz para visualizar a variabilidade e a tend√™ncia central dos dados de forma concisa.'
)
# Adicione um seletor para escolher a coluna para o Box Plot
coluna_box_plot = st.selectbox("Selecione a coluna para o Box Plot:", df_hist.columns)

# Crie o Box Plot com base na coluna selecionada
plt.figure(figsize=(10, 6))
sns.boxplot(x=coluna_box_plot, data=df)
plt.title(f"Box Plot de {coluna_box_plot}")
plt.xlabel(coluna_box_plot)
st.pyplot(plt)
